# -------------------------------------------------------------------------------------------------
# This Python script creates a GUI for the robotic arm SCADA testbed. The length of the robotic
# arm and the current state of the robotic arm is querried from the MODBUS memory of the PLC
# Program by:-
# Rishabh Das
# Date:- 4th October 2018
# -------------------------------------------------------------------------------------------------
import math
import pygame
import time

# -------------------------------------------------------------------------------------------------
# Declaring the specification fo the robotic arm as global variable. The coordinates are also
# declared as global variable
# -------------------------------------------------------------------------------------------------



# -------------------------------------------------------------------------------------------------
# This function queries the PLC to get the Specification of the Robotic arm
# -------------------------------------------------------------------------------------------------
def get_specs():
    # Get the length of the arms from the MODBUS memory of the PLC
    length_1=100
    length_2=200
    # Get the current Theta positions of the arms from the MODBUS memory of the PLC
    Theta_1=30
    Theta_2=50

# -------------------------------------------------------------------------------------------------
# This function calculates the coordinates of the arm
# -------------------------------------------------------------------------------------------------
def calculate_coordinates(length_1,length_2,Theta_1,Theta):
    # Calculating the coordinate of the first joint
    x1= length_1*(math.cos(Theta_1*0.0174533))
    y1= length_1*(math.sin(Theta_1*0.0174533))
    # Calculating the coordinate of the end of the robotic arm
    x= length_1*(math.cos(Theta_1*0.0174533)) + length_2*(math.cos(Theta_2*0.0174533))
    y= length_1*(math.sin(Theta_1*0.0174533)) + length_2*(math.sin(Theta_2*0.0174533))
    print("The final coordinate of the Robotic arm:(x1,y1)",x1,y1)
    print("The final coordinate of the Robotic arm:(x,y)",x,y)

# -------------------------------------------------------------------------------------------------
# This project creates the graphics of the robotic arm using the pygame library
# -------------------------------------------------------------------------------------------------
def create_graphics(x1,y1,x,y):
    #Drawing the robotic arm in pygame
    pygame.init()
    size = [500, 500]
    screen = pygame.display.set_mode(size)
    pygame.display.set_caption("Robotic Arm")


    #Declaring the colors required int he graphics. This is in RGB format
    BLACK = (0,0,0)
    BLACK = (0,0,0)
    WHITE = (255,255,255)
    BLUE  = (0,0,255)
    GREEN = (0,255,0)
    RED   = (255,0,0)

    screen.fill(BLACK)
    pygame.draw.line(screen, GREEN,[250, 250], [250+x1,250+y1], 5)
    pygame.draw.line(screen, GREEN,[250+x1,250+y1], [250+x,250+y], 5)
    pygame.draw.circle(screen, BLUE, [250, 250], 7)
    pygame.draw.circle(screen, BLUE, [250+round(x1), 250+round(y1)], 7)
    pygame.draw.circle(screen, BLUE, [250+round(x), 250+round(y)], 7)
    pygame.display.flip()
    time.sleep(5)

# -------------------------------------------------------------------------------------------------
# Main Function controlling the flow of the program
# -------------------------------------------------------------------------------------------------
def main():
    # Declaring the coordinate of the two joints of the robotic arm
    x = 0
    y = 0
    x1 = 0
    y1 = 0
    # Get the length of the arms from the MODBUS memory of the PLC
    length_1 = 100
    length_2 = 200
    # Get the current Theta positions of the arms from the MODBUS memory of the PLC
    Theta_1 = 30
    Theta_2 = 50

    # Get the specification of the robotic arms fromt the PLC
    get_specs()

    # Calculate the coordinates of the Robotic arms
    calculate_coordinates(length_1,length_2,Theta_1,Theta_2)



if __name__ == '__main__':
    main()










